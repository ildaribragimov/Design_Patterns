/* ==== Решение "preventDefault.js"========================== *
 * ==== Отмена действия по умолчанию браузера на событие ==== *
 * ========================================================== */
function preventDefault(event) { event = event || window.event; event.preventDefault ? event.preventDefault() : event.returnValue = false; }
/* ========================================================== */


/* ==== Решение "getResultMsg.js"==================== *
 * ==== Формирование объекта системных сообщений ==== *
 * ================================================== */
function getResultMsg(type, logMsgs) { return { type: type, report: logMsgs }; }
/* ================================================== */


/* ==== Решение "formsFieldsValidate.js" ============================= *
 * ==== Проверка значений поля формы на допустимость и валидность ==== *
 * =================================================================== */
function checkFormData(form) { var elements = form.elements, logMsgs = []; for (var e = 0; e < elements.length; e++) { var tagName = elements[e].tagName.toLowerCase(), name = elements[e].name, type = elements[e].type, value = elements[e].value; if ( type == 'submit' || ~name.toLowerCase().indexOf('captcha') ) { continue; } if ( value == '' ) { logMsgs[e] = 'Поле не должно быть пустым!'; continue; } switch ( name ) { case 'name': var regExp = /(^[а-яА-ЯёЁ\s]*$)/i; if ( regExp.exec(value) == null) { logMsgs[e] = 'Имя должно состоять только из букв русского алфавита!'; } break; case 'email': var regExp = /(^([a-z0-9]+[-._]{0,1})+@([a-z0-9]+[-._]{0,1})+\.+[A-z]{2,8}$)/i; if ( regExp.exec(value) == null) { logMsgs[e] = 'E-mail указан не верно!'; } break; case 'phone': var regExp = /(\+7[\s{1}]?[\({1}]?\d{3,6}[\){1}]?[\s{1}]?\d{1,3}[\s\-{1}]?\d{2}[\s\-{1}]?\d{2}\b)/; if ( regExp.exec(value) == null) { logMsgs[e] = 'Номер телефона указан не верно!'; } break; case 'message': var regExp = /([\<\>]|script|style)/i; if ( regExp.exec(value) !== null) { logMsgs[e] = 'Вводите только текст! HTML-теги недопустимы!'; } break; default: break; } } var result = ( logMsgs.length > 0) ? getResultMsg('fail', logMsgs) : getResultMsg('success', ['Проверка данных прошла успешно!']); return result; }
/* ================================================== */